// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.176.0
//   protoc               v5.26.1
// source: src/proto/user-settings/user-settings.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "userSettings";

export interface GetUserSettingsByUserIdRequest {
  userId: string;
}

export interface GetUserSettingsRequest {
  id: string;
}

export interface UserSettings {
  id: string;
  favoriteStarWarsCharacterSwapiId: string;
  createdAt: string;
  updatedAt: string;
}

export interface UpdateUserSettingsRequest {
  id: string;
  favoriteStarWarsCharacterSwapiId: string;
}

export const USER_SETTINGS_PACKAGE_NAME = "userSettings";

export interface UserSettingsServiceClient {
  getUserSettings(request: GetUserSettingsRequest): Observable<UserSettings>;

  getUserSettingsBuUserId(request: GetUserSettingsByUserIdRequest): Observable<UserSettings>;

  updateUserSettings(request: UpdateUserSettingsRequest): Observable<UserSettings>;
}

export interface UserSettingsServiceController {
  getUserSettings(request: GetUserSettingsRequest): Promise<UserSettings> | Observable<UserSettings> | UserSettings;

  getUserSettingsBuUserId(
    request: GetUserSettingsByUserIdRequest,
  ): Promise<UserSettings> | Observable<UserSettings> | UserSettings;

  updateUserSettings(
    request: UpdateUserSettingsRequest,
  ): Promise<UserSettings> | Observable<UserSettings> | UserSettings;
}

export function UserSettingsServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getUserSettings", "getUserSettingsBuUserId", "updateUserSettings"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("UserSettingsService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("UserSettingsService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const USER_SETTINGS_SERVICE_NAME = "UserSettingsService";
